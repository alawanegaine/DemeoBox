

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May  5 12:18:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     _INTCONbits	set	4082
    23  0000                     _OSCCONbits	set	4051
    24  0000                     _OSCTUNEbits	set	3995
    25  0000                     _PIE1bits	set	3997
    26  0000                     _PIR1bits	set	3998
    27  0000                     _PORTAbits	set	3968
    28  0000                     _RCREG	set	4014
    29  0000                     _RCSTAbits	set	4011
    30  0000                     _SPBRG	set	4015
    31  0000                     _TRISAbits	set	3986
    32  0000                     _TRISCbits	set	3988
    33  0000                     _TXREG	set	4013
    34  0000                     _TXSTAbits	set	4012
    35  0000                     _RCIF	set	31989
    36  0000                     _TRMT	set	32097
    37                           
    38                           ; 0 bytes @ 0x25
    39 ;;
    40 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    41 ;;
    42 ;; *************** function _main *****************
    43 ;; Defined at:
    44 ;;		line 161 in file "main.c"
    45 ;; Parameters:    Size  Location     Type
    46 ;;  argc            2   32[COMRAM] int 
    47 ;;  argv            3   34[COMRAM] PTR PTR unsigned char 
    48 ;; Auto vars:     Size  Location     Type
    49 ;;		None
    50 ;; Return value:  Size  Location     Type
    51 ;;                  2   32[COMRAM] int 
    52 ;; Registers used:
    53 ;;		wreg, status,2, status,0, cstack
    54 ;; Tracked objects:
    55 ;;		On entry : 0/0
    56 ;;		On exit  : 0/0
    57 ;;		Unchanged: 0/0
    58 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    59 ;;      Params:         5       0       0       0       0       0       0
    60 ;;      Locals:         0       0       0       0       0       0       0
    61 ;;      Temps:          0       0       0       0       0       0       0
    62 ;;      Totals:         5       0       0       0       0       0       0
    63 ;;Total ram usage:        5 bytes
    64 ;; Hardware stack levels required when called:    3
    65 ;; This function calls:
    66 ;;		_UART_Write
    67 ;;		_delay_TLS0101
    68 ;;		_init_IOPin
    69 ;;		_init_USART
    70 ;;		_read_id_module
    71 ;; This function is called by:
    72 ;;		Startup code after reset
    73 ;; This function uses a non-reentrant model
    74 ;;
    75                           
    76                           	psect	text0
    77  0001C8                     __ptext0:
    78                           	opt stack 0
    79  0001C8                     _main:
    80                           	opt stack 28
    81                           
    82                           ;main.c: 163: OSCCONbits.IRCF = 0b111 ;
    83                           
    84                           ;incstack = 0
    85  0001C8  88D3               	bsf	4051,4,c	;volatile
    86  0001CA  8AD3               	bsf	4051,5,c	;volatile
    87  0001CC  8CD3               	bsf	4051,6,c	;volatile
    88                           
    89                           ;main.c: 164: OSCTUNEbits.PLLEN = 1 ;
    90  0001CE  8C9B               	bsf	3995,6,c	;volatile
    91                           
    92                           ;main.c: 165: init_USART();
    93  0001D0  EC16  F001         	call	_init_USART	;wreg free
    94                           
    95                           ;main.c: 166: init_IOPin();
    96  0001D4  EC2D  F001         	call	_init_IOPin	;wreg free
    97                           
    98                           ;main.c: 168: INTCONbits.PEIE = 1 ;
    99  0001D8  8CF2               	bsf	intcon,6,c	;volatile
   100                           
   101                           ;main.c: 169: INTCONbits.GIE = 1 ;
   102  0001DA  8EF2               	bsf	intcon,7,c	;volatile
   103  0001DC  D000               	goto	l844
   104  0001DE                     l844:
   105                           
   106                           ;main.c: 172: {
   107                           ;main.c: 173: UART_Write(read_id_module()+48);
   108  0001DE  EC9C  F000         	call	_read_id_module	;wreg free
   109  0001E2  5015               	movf	?_read_id_module,w,c
   110  0001E4  0F30               	addlw	48
   111  0001E6  EC20  F001         	call	_UART_Write
   112                           
   113                           ;main.c: 174: delay_TLS0101(30000) ;
   114  0001EA  0E30               	movlw	48
   115  0001EC  6E15               	movwf	delay_TLS0101@delayVal,c
   116  0001EE  0E75               	movlw	117
   117  0001F0  6E16               	movwf	delay_TLS0101@delayVal+1,c
   118  0001F2  0E00               	movlw	0
   119  0001F4  6E17               	movwf	delay_TLS0101@delayVal+2,c
   120  0001F6  0E00               	movlw	0
   121  0001F8  6E18               	movwf	delay_TLS0101@delayVal+3,c
   122  0001FA  ECC0  F000         	call	_delay_TLS0101	;wreg free
   123  0001FE  D7EF               	goto	l844
   124                           
   125                           ;main.c: 175: }
   126                           ;main.c: 177: return 0;
   127                           ;	Return value of _main is never used
   128  000200  EF0C  F000         	goto	start
   129  000204                     __end_of_main:
   130                           	opt stack 0
   131                           intcon	equ	0xFF2
   132                           
   133                           	psect	cinit
   134  000204                     __pcinit:
   135                           	opt stack 0
   136  000204                     start_initialization:
   137                           	opt stack 0
   138  000204                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK2 (200 bytes)
   142  000204  EE02  F000         	lfsr	0,__pbssBANK2
   143  000208  0EC8               	movlw	200
   144  00020A                     clear_0:
   145  00020A  6AEE               	clrf	postinc0,c
   146  00020C  06E8               	decf	wreg,f,c
   147  00020E  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK1 (200 bytes)
   150  000210  EE01  F000         	lfsr	0,__pbssBANK1
   151  000214  0EC8               	movlw	200
   152  000216                     clear_1:
   153  000216  6AEE               	clrf	postinc0,c
   154  000218  06E8               	decf	wreg,f,c
   155  00021A  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (5 bytes)
   158  00021C  6A2A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   159  00021E  6A29               	clrf	(__pbssCOMRAM+3)& (0+255),c
   160  000220  6A28               	clrf	(__pbssCOMRAM+2)& (0+255),c
   161  000222  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162  000224  6A26               	clrf	__pbssCOMRAM& (0+255),c
   163  000226                     end_of_initialization:
   164                           	opt stack 0
   165  000226                     __end_of__initialization:
   166                           	opt stack 0
   167  000226  0100               	movlb	0
   168  000228  EFE4  F000         	goto	_main	;jump to C main() function
   169                           intcon	equ	0xFF2
   170                           postinc0	equ	0xFEE
   171                           wreg	equ	0xFE8
   172                           
   173                           	psect	bssCOMRAM
   174  000026                     __pbssCOMRAM:
   175                           	opt stack 0
   176  000026                     _iRx:
   177                           	opt stack 0
   178  000026                     	ds	2
   179  000028                     _iRxLecture:
   180                           	opt stack 0
   181  000028                     	ds	2
   182  00002A                     _t:
   183                           	opt stack 0
   184  00002A                     	ds	1
   185                           intcon	equ	0xFF2
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           
   189                           	psect	bssBANK1
   190  000100                     __pbssBANK1:
   191                           	opt stack 0
   192  000100                     _RxBuffer:
   193                           	opt stack 0
   194  000100                     	ds	200
   195                           intcon	equ	0xFF2
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	bssBANK2
   200  000200                     __pbssBANK2:
   201                           	opt stack 0
   202  000200                     _TxBuffer:
   203                           	opt stack 0
   204  000200                     	ds	200
   205                           intcon	equ	0xFF2
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackCOMRAM
   210  000001                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  000001                     ?___awmod:
   213                           	opt stack 0
   214  000001                     ___awmod@dividend:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218  000001                     	ds	2
   219  000003                     ___awmod@divisor:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x2
   223  000003                     	ds	2
   224  000005                     ___awmod@counter:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x4
   228  000005                     	ds	1
   229  000006                     ___awmod@sign:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x5
   233  000006                     	ds	1
   234  000007                     ??_ISR:
   235                           
   236                           ; 0 bytes @ 0x6
   237  000007                     	ds	14
   238  000015                     ?_read_id_module:
   239                           	opt stack 0
   240  000015                     UART_Write@data:
   241                           	opt stack 0
   242  000015                     delay_TLS0101@delayVal:
   243                           	opt stack 0
   244                           
   245                           ; 4 bytes @ 0x14
   246  000015                     	ds	2
   247  000017                     read_id_module@id:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x16
   251  000017                     	ds	2
   252  000019                     ??_delay_TLS0101:
   253                           
   254                           ; 0 bytes @ 0x18
   255  000019                     	ds	4
   256  00001D                     delay_TLS0101@i:
   257                           	opt stack 0
   258                           
   259                           ; 4 bytes @ 0x1C
   260  00001D                     	ds	4
   261  000021                     
   262                           ; 2 bytes @ 0x20
   263  000021                     	ds	2
   264  000023                     
   265                           ; 3 bytes @ 0x22
   266  000023                     	ds	3
   267  000026                     intcon	equ	0xFF2
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271 ;; *************** function _read_id_module *****************
   272 ;; Defined at:
   273 ;;		line 144 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  id              2   22[COMRAM] int 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2   20[COMRAM] int 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   287 ;;      Params:         2       0       0       0       0       0       0
   288 ;;      Locals:         2       0       0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0       0       0
   290 ;;      Totals:         4       0       0       0       0       0       0
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    2
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text1
   302  000138                     __ptext1:
   303                           	opt stack 0
   304  000138                     _read_id_module:
   305                           	opt stack 28
   306                           
   307                           ;main.c: 145: int id = 0;
   308                           
   309                           ;incstack = 0
   310  000138  0E00               	movlw	0
   311  00013A  6E18               	movwf	read_id_module@id+1,c
   312  00013C  0E00               	movlw	0
   313  00013E  6E17               	movwf	read_id_module@id,c
   314                           
   315                           ;main.c: 146: if(!PORTAbits.RA0){
   316  000140  B080               	btfsc	3968,0,c	;volatile
   317  000142  D003               	goto	l782
   318                           
   319                           ;main.c: 147: id += 1 ;
   320  000144  4A17               	infsnz	read_id_module@id,f,c
   321  000146  2A18               	incf	read_id_module@id+1,f,c
   322  000148  D000               	goto	l782
   323  00014A                     l782:
   324                           
   325                           ;main.c: 148: }
   326                           ;main.c: 149: if(!PORTAbits.RA1){
   327  00014A  B280               	btfsc	3968,1,c	;volatile
   328  00014C  D005               	goto	l786
   329                           
   330                           ;main.c: 150: id += 2 ;
   331  00014E  0E02               	movlw	2
   332  000150  2617               	addwf	read_id_module@id,f,c
   333  000152  0E00               	movlw	0
   334  000154  2218               	addwfc	read_id_module@id+1,f,c
   335  000156  D000               	goto	l786
   336  000158                     l786:
   337                           
   338                           ;main.c: 151: }
   339                           ;main.c: 152: if(!PORTAbits.RA2){
   340  000158  B480               	btfsc	3968,2,c	;volatile
   341  00015A  D005               	goto	l790
   342                           
   343                           ;main.c: 153: id += 4 ;
   344  00015C  0E04               	movlw	4
   345  00015E  2617               	addwf	read_id_module@id,f,c
   346  000160  0E00               	movlw	0
   347  000162  2218               	addwfc	read_id_module@id+1,f,c
   348  000164  D000               	goto	l790
   349  000166                     l790:
   350                           
   351                           ;main.c: 154: }
   352                           ;main.c: 155: if(!PORTAbits.RA3){
   353  000166  B680               	btfsc	3968,3,c	;volatile
   354  000168  D005               	goto	l794
   355                           
   356                           ;main.c: 156: id += 8 ;
   357  00016A  0E08               	movlw	8
   358  00016C  2617               	addwf	read_id_module@id,f,c
   359  00016E  0E00               	movlw	0
   360  000170  2218               	addwfc	read_id_module@id+1,f,c
   361  000172  D000               	goto	l794
   362  000174                     l794:
   363                           
   364                           ;main.c: 157: }
   365                           ;main.c: 158: return id ;
   366  000174  C017  F015         	movff	read_id_module@id,?_read_id_module
   367  000178  C018  F016         	movff	read_id_module@id+1,?_read_id_module+1
   368  00017C  D000               	goto	l76
   369  00017E                     l76:
   370  00017E  0012               	return		;funcret
   371  000180                     __end_of_read_id_module:
   372                           	opt stack 0
   373                           intcon	equ	0xFF2
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377 ;; *************** function _init_USART *****************
   378 ;; Defined at:
   379 ;;		line 103 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;		None               void
   386 ;; Registers used:
   387 ;;		wreg, status,2
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    2
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text2
   408  00022C                     __ptext2:
   409                           	opt stack 0
   410  00022C                     _init_USART:
   411                           	opt stack 28
   412                           
   413                           ;main.c: 104: TXSTAbits.TXEN = 1 ;
   414                           
   415                           ;incstack = 0
   416  00022C  8AAC               	bsf	4012,5,c	;volatile
   417                           
   418                           ;main.c: 105: TXSTAbits.BRGH = 1 ;
   419  00022E  84AC               	bsf	4012,2,c	;volatile
   420                           
   421                           ;main.c: 106: RCSTAbits.CREN = 1 ;
   422  000230  88AB               	bsf	4011,4,c	;volatile
   423                           
   424                           ;main.c: 110: TRISCbits.RC7 = 1 ;
   425  000232  8E94               	bsf	3988,7,c	;volatile
   426                           
   427                           ;main.c: 111: TRISCbits.RC6 = 0 ;
   428  000234  9C94               	bcf	3988,6,c	;volatile
   429                           
   430                           ;main.c: 113: SPBRG = 51 ;
   431  000236  0E33               	movlw	51
   432  000238  6EAF               	movwf	4015,c	;volatile
   433                           
   434                           ;main.c: 115: PIE1bits.RCIE = 1 ;
   435  00023A  8A9D               	bsf	3997,5,c	;volatile
   436                           
   437                           ;main.c: 116: RCSTAbits.SPEN = 1 ;
   438  00023C  8EAB               	bsf	4011,7,c	;volatile
   439  00023E  0012               	return		;funcret
   440  000240                     __end_of_init_USART:
   441                           	opt stack 0
   442                           intcon	equ	0xFF2
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446 ;; *************** function _init_IOPin *****************
   447 ;; Defined at:
   448 ;;		line 119 in file "main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;		None               void
   455 ;; Registers used:
   456 ;;		None
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   462 ;;      Params:         0       0       0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    2
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text3
   477  00025A                     __ptext3:
   478                           	opt stack 0
   479  00025A                     _init_IOPin:
   480                           	opt stack 28
   481                           
   482                           ;main.c: 120: TRISAbits.TRISA0 = 1 ;
   483                           
   484                           ;incstack = 0
   485  00025A  8092               	bsf	3986,0,c	;volatile
   486                           
   487                           ;main.c: 121: TRISAbits.TRISA1 = 1 ;
   488  00025C  8292               	bsf	3986,1,c	;volatile
   489                           
   490                           ;main.c: 122: TRISAbits.TRISA2 = 1 ;
   491  00025E  8492               	bsf	3986,2,c	;volatile
   492                           
   493                           ;main.c: 123: TRISAbits.TRISA3 = 1 ;
   494  000260  8692               	bsf	3986,3,c	;volatile
   495  000262  0012               	return		;funcret
   496  000264                     __end_of_init_IOPin:
   497                           	opt stack 0
   498                           intcon	equ	0xFF2
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502 ;; *************** function _delay_TLS0101 *****************
   503 ;; Defined at:
   504 ;;		line 94 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  delayVal        4   20[COMRAM] unsigned long 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  i               4   28[COMRAM] unsigned long 
   509 ;; Return value:  Size  Location     Type
   510 ;;		None               void
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         4       0       0       0       0       0       0
   519 ;;      Locals:         4       0       0       0       0       0       0
   520 ;;      Temps:          4       0       0       0       0       0       0
   521 ;;      Totals:        12       0       0       0       0       0       0
   522 ;;Total ram usage:       12 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    2
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text4
   533  000180                     __ptext4:
   534                           	opt stack 0
   535  000180                     _delay_TLS0101:
   536                           	opt stack 28
   537                           
   538                           ;main.c: 96: unsigned long i;
   539                           ;main.c: 97: for (i = 0; i < 2*delayVal; i++)
   540                           
   541                           ;incstack = 0
   542  000180  0E00               	movlw	0
   543  000182  6E1D               	movwf	delay_TLS0101@i,c
   544  000184  0E00               	movlw	0
   545  000186  6E1E               	movwf	delay_TLS0101@i+1,c
   546  000188  0E00               	movlw	0
   547  00018A  6E1F               	movwf	delay_TLS0101@i+2,c
   548  00018C  0E00               	movlw	0
   549  00018E  6E20               	movwf	delay_TLS0101@i+3,c
   550  000190  D007               	goto	l45
   551  000192                     l46:
   552                           
   553                           ;main.c: 98: {
   554                           ;main.c: 99: __nop();
   555  000192  F000               	nop	
   556  000194  0E01               	movlw	1
   557  000196  261D               	addwf	delay_TLS0101@i,f,c
   558  000198  0E00               	movlw	0
   559  00019A  221E               	addwfc	delay_TLS0101@i+1,f,c
   560  00019C  221F               	addwfc	delay_TLS0101@i+2,f,c
   561  00019E  2220               	addwfc	delay_TLS0101@i+3,f,c
   562  0001A0                     l45:
   563  0001A0  90D8               	bcf	status,0,c
   564  0001A2  3415               	rlcf	delay_TLS0101@delayVal,w,c
   565  0001A4  6E19               	movwf	??_delay_TLS0101& (0+255),c
   566  0001A6  3416               	rlcf	delay_TLS0101@delayVal+1,w,c
   567  0001A8  6E1A               	movwf	(??_delay_TLS0101+1)& (0+255),c
   568  0001AA  3417               	rlcf	delay_TLS0101@delayVal+2,w,c
   569  0001AC  6E1B               	movwf	(??_delay_TLS0101+2)& (0+255),c
   570  0001AE  3418               	rlcf	delay_TLS0101@delayVal+3,w,c
   571  0001B0  6E1C               	movwf	(??_delay_TLS0101+3)& (0+255),c
   572  0001B2  5019               	movf	??_delay_TLS0101,w,c
   573  0001B4  5C1D               	subwf	delay_TLS0101@i,w,c
   574  0001B6  501A               	movf	??_delay_TLS0101+1,w,c
   575  0001B8  581E               	subwfb	delay_TLS0101@i+1,w,c
   576  0001BA  501B               	movf	??_delay_TLS0101+2,w,c
   577  0001BC  581F               	subwfb	delay_TLS0101@i+2,w,c
   578  0001BE  501C               	movf	??_delay_TLS0101+3,w,c
   579  0001C0  5820               	subwfb	delay_TLS0101@i+3,w,c
   580  0001C2  A0D8               	btfss	status,0,c
   581  0001C4  D7E6               	goto	l46
   582  0001C6  0012               	return		;funcret
   583  0001C8                     __end_of_delay_TLS0101:
   584                           	opt stack 0
   585                           intcon	equ	0xFF2
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           status	equ	0xFD8
   589                           
   590 ;; *************** function _UART_Write *****************
   591 ;; Defined at:
   592 ;;		line 138 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  data            1    wreg     unsigned char 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  data            1   20[COMRAM] unsigned char 
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   606 ;;      Params:         0       0       0       0       0       0       0
   607 ;;      Locals:         1       0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0
   609 ;;      Totals:         1       0       0       0       0       0       0
   610 ;;Total ram usage:        1 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    2
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text5
   621  000240                     __ptext5:
   622                           	opt stack 0
   623  000240                     _UART_Write:
   624                           	opt stack 28
   625                           
   626                           ;incstack = 0
   627                           ;UART_Write@data stored from wreg
   628  000240  6E15               	movwf	UART_Write@data,c
   629                           
   630                           ;main.c: 140: while(!TRMT);
   631  000242  D000               	goto	l66
   632  000244                     l66:
   633  000244  A2AC               	btfss	4012,1,c	;volatile
   634  000246  D7FE               	goto	l66
   635                           
   636                           ;main.c: 141: TXREG = data;
   637  000248  C015  FFAD         	movff	UART_Write@data,4013	;volatile
   638  00024C  0012               	return		;funcret
   639  00024E                     __end_of_UART_Write:
   640                           	opt stack 0
   641                           intcon	equ	0xFF2
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function _ISR *****************
   647 ;; Defined at:
   648 ;;		line 180 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;		None               void
   655 ;; Registers used:
   656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   662 ;;      Params:         0       0       0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0
   664 ;;      Temps:         14       0       0       0       0       0       0
   665 ;;      Totals:        14       0       0       0       0       0       0
   666 ;;Total ram usage:       14 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    1
   669 ;; This function calls:
   670 ;;		_UART_Read
   671 ;;		___awmod
   672 ;; This function is called by:
   673 ;;		Interrupt level 2
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	intcode
   678  000008                     __pintcode:
   679                           	opt stack 0
   680  000008                     _ISR:
   681                           	opt stack 28
   682                           
   683                           ;incstack = 0
   684  000008  CFFA F007          	movff	pclath,??_ISR
   685  00000C  CFFB F008          	movff	pclatu,??_ISR+1
   686  000010  CFE9 F009          	movff	fsr0l,??_ISR+2
   687  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
   688                           pclatu	equ	0xFFB
   689                           pclath	equ	0xFFA
   690                           intcon	equ	0xFF2
   691                           postinc0	equ	0xFEE
   692                           fsr0l	equ	0xFE9
   693                           wreg	equ	0xFE8
   694                           status	equ	0xFD8
   695                           
   696                           	psect	intcode_body
   697  00001C                     __pintcode_body:
   698                           	opt stack 28
   699  00001C                     int_func:
   700                           	opt stack 28
   701  00001C  0006               	pop		; remove dummy address from shadow register refresh
   702  00001E  CFEA F00A          	movff	fsr0h,??_ISR+3
   703  000022  CFE1 F00B          	movff	fsr1l,??_ISR+4
   704  000026  CFE2 F00C          	movff	fsr1h,??_ISR+5
   705  00002A  CFD9 F00D          	movff	fsr2l,??_ISR+6
   706  00002E  CFDA F00E          	movff	fsr2h,??_ISR+7
   707  000032  CFF3 F00F          	movff	prodl,??_ISR+8
   708  000036  CFF4 F010          	movff	prodh,??_ISR+9
   709  00003A  CFF6 F011          	movff	tblptrl,??_ISR+10
   710  00003E  CFF7 F012          	movff	tblptrh,??_ISR+11
   711  000042  CFF8 F013          	movff	tblptru,??_ISR+12
   712  000046  CFF5 F014          	movff	tablat,??_ISR+13
   713                           
   714                           ;main.c: 182: if(PIR1bits.RCIF)
   715  00004A  AA9E               	btfss	3998,5,c	;volatile
   716  00004C  D017               	goto	i2l86
   717                           
   718                           ;main.c: 183: {
   719                           ;main.c: 184: RxBuffer[iRx%200] = UART_Read() ;
   720  00004E  C026  F001         	movff	_iRx,___awmod@dividend
   721  000052  C027  F002         	movff	_iRx+1,___awmod@dividend+1
   722  000056  0E00               	movlw	0
   723  000058  6E04               	movwf	___awmod@divisor+1,c
   724  00005A  0EC8               	movlw	200
   725  00005C  6E03               	movwf	___awmod@divisor,c
   726  00005E  EC5B  F000         	call	___awmod	;wreg free
   727  000062  0E00               	movlw	low _RxBuffer
   728  000064  2401               	addwf	?___awmod,w,c
   729  000066  6ED9               	movwf	fsr2l,c
   730  000068  0E01               	movlw	high _RxBuffer
   731  00006A  2002               	addwfc	?___awmod+1,w,c
   732  00006C  6EDA               	movwf	fsr2h,c
   733  00006E  EC27  F001         	call	_UART_Read	;wreg free
   734  000072  6EDF               	movwf	indf2,c
   735                           
   736                           ;main.c: 185: iRx++ ;
   737  000074  4A26               	infsnz	_iRx,f,c
   738  000076  2A27               	incf	_iRx+1,f,c
   739                           
   740                           ;main.c: 186: PIR1bits.RCIF = 0;
   741  000078  9A9E               	bcf	3998,5,c	;volatile
   742  00007A  D000               	goto	i2l86
   743  00007C                     i2l86:
   744  00007C  C014  FFF5         	movff	??_ISR+13,tablat
   745  000080  C013  FFF8         	movff	??_ISR+12,tblptru
   746  000084  C012  FFF7         	movff	??_ISR+11,tblptrh
   747  000088  C011  FFF6         	movff	??_ISR+10,tblptrl
   748  00008C  C010  FFF4         	movff	??_ISR+9,prodh
   749  000090  C00F  FFF3         	movff	??_ISR+8,prodl
   750  000094  C00E  FFDA         	movff	??_ISR+7,fsr2h
   751  000098  C00D  FFD9         	movff	??_ISR+6,fsr2l
   752  00009C  C00C  FFE2         	movff	??_ISR+5,fsr1h
   753  0000A0  C00B  FFE1         	movff	??_ISR+4,fsr1l
   754  0000A4  C00A  FFEA         	movff	??_ISR+3,fsr0h
   755  0000A8  C009  FFE9         	movff	??_ISR+2,fsr0l
   756  0000AC  C008  FFFB         	movff	??_ISR+1,pclatu
   757  0000B0  C007  FFFA         	movff	??_ISR,pclath
   758  0000B4  0011               	retfie		f
   759  0000B6                     __end_of_ISR:
   760                           	opt stack 0
   761                           pclatu	equ	0xFFB
   762                           pclath	equ	0xFFA
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           prodh	equ	0xFF4
   768                           prodl	equ	0xFF3
   769                           intcon	equ	0xFF2
   770                           postinc0	equ	0xFEE
   771                           fsr0h	equ	0xFEA
   772                           fsr0l	equ	0xFE9
   773                           wreg	equ	0xFE8
   774                           fsr1h	equ	0xFE2
   775                           fsr1l	equ	0xFE1
   776                           indf2	equ	0xFDF
   777                           fsr2h	equ	0xFDA
   778                           fsr2l	equ	0xFD9
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function ___awmod *****************
   782 ;; Defined at:
   783 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/awmod.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  dividend        2    0[COMRAM] int 
   786 ;;  divisor         2    2[COMRAM] int 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  sign            1    5[COMRAM] unsigned char 
   789 ;;  counter         1    4[COMRAM] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  2    0[COMRAM] int 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   799 ;;      Params:         4       0       0       0       0       0       0
   800 ;;      Locals:         2       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0
   802 ;;      Totals:         6       0       0       0       0       0       0
   803 ;;Total ram usage:        6 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_ISR
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text7
   813  0000B6                     __ptext7:
   814                           	opt stack 0
   815  0000B6                     ___awmod:
   816                           	opt stack 28
   817                           
   818                           ;incstack = 0
   819  0000B6  0E00               	movlw	0
   820  0000B8  6E06               	movwf	___awmod@sign,c
   821  0000BA  AE02               	btfss	___awmod@dividend+1,7,c
   822  0000BC  D007               	goto	i2l806
   823  0000BE  6C01               	negf	___awmod@dividend,c
   824  0000C0  1E02               	comf	___awmod@dividend+1,f,c
   825  0000C2  B0D8               	btfsc	status,0,c
   826  0000C4  2A02               	incf	___awmod@dividend+1,f,c
   827  0000C6  0E01               	movlw	1
   828  0000C8  6E06               	movwf	___awmod@sign,c
   829  0000CA  D000               	goto	i2l806
   830  0000CC                     i2l806:
   831  0000CC  AE04               	btfss	___awmod@divisor+1,7,c
   832  0000CE  D005               	goto	i2l810
   833  0000D0  6C03               	negf	___awmod@divisor,c
   834  0000D2  1E04               	comf	___awmod@divisor+1,f,c
   835  0000D4  B0D8               	btfsc	status,0,c
   836  0000D6  2A04               	incf	___awmod@divisor+1,f,c
   837  0000D8  D000               	goto	i2l810
   838  0000DA                     i2l810:
   839  0000DA  5003               	movf	___awmod@divisor,w,c
   840  0000DC  1004               	iorwf	___awmod@divisor+1,w,c
   841  0000DE  B4D8               	btfsc	status,2,c
   842  0000E0  D01D               	goto	i2l826
   843  0000E2  0E01               	movlw	1
   844  0000E4  6E05               	movwf	___awmod@counter,c
   845  0000E6  D005               	goto	i2l816
   846  0000E8                     i2l814:
   847  0000E8  90D8               	bcf	status,0,c
   848  0000EA  3603               	rlcf	___awmod@divisor,f,c
   849  0000EC  3604               	rlcf	___awmod@divisor+1,f,c
   850  0000EE  2A05               	incf	___awmod@counter,f,c
   851  0000F0  D000               	goto	i2l816
   852  0000F2                     i2l816:
   853  0000F2  BE04               	btfsc	___awmod@divisor+1,7,c
   854  0000F4  D002               	goto	i2l818
   855  0000F6  D7F8               	goto	i2l814
   856  0000F8  D000               	goto	i2l818
   857  0000FA                     i2l818:
   858  0000FA  5003               	movf	___awmod@divisor,w,c
   859  0000FC  5C01               	subwf	___awmod@dividend,w,c
   860  0000FE  5004               	movf	___awmod@divisor+1,w,c
   861  000100  5802               	subwfb	___awmod@dividend+1,w,c
   862  000102  A0D8               	btfss	status,0,c
   863  000104  D005               	goto	i2l822
   864  000106  5003               	movf	___awmod@divisor,w,c
   865  000108  5E01               	subwf	___awmod@dividend,f,c
   866  00010A  5004               	movf	___awmod@divisor+1,w,c
   867  00010C  5A02               	subwfb	___awmod@dividend+1,f,c
   868  00010E  D000               	goto	i2l822
   869  000110                     i2l822:
   870  000110  90D8               	bcf	status,0,c
   871  000112  3204               	rrcf	___awmod@divisor+1,f,c
   872  000114  3203               	rrcf	___awmod@divisor,f,c
   873  000116  2E05               	decfsz	___awmod@counter,f,c
   874  000118  D7F0               	goto	i2l818
   875  00011A  D000               	goto	i2l826
   876  00011C                     i2l826:
   877  00011C  5006               	movf	___awmod@sign,w,c
   878  00011E  B4D8               	btfsc	status,2,c
   879  000120  D005               	goto	i2l830
   880  000122  6C01               	negf	___awmod@dividend,c
   881  000124  1E02               	comf	___awmod@dividend+1,f,c
   882  000126  B0D8               	btfsc	status,0,c
   883  000128  2A02               	incf	___awmod@dividend+1,f,c
   884  00012A  D000               	goto	i2l830
   885  00012C                     i2l830:
   886  00012C  C001  F001         	movff	___awmod@dividend,?___awmod
   887  000130  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   888  000134  D000               	goto	i2l295
   889  000136                     i2l295:
   890  000136  0012               	return		;funcret
   891  000138                     __end_of___awmod:
   892                           	opt stack 0
   893                           pclatu	equ	0xFFB
   894                           pclath	equ	0xFFA
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           prodh	equ	0xFF4
   900                           prodl	equ	0xFF3
   901                           intcon	equ	0xFF2
   902                           postinc0	equ	0xFEE
   903                           fsr0h	equ	0xFEA
   904                           fsr0l	equ	0xFE9
   905                           wreg	equ	0xFE8
   906                           fsr1h	equ	0xFE2
   907                           fsr1l	equ	0xFE1
   908                           indf2	equ	0xFDF
   909                           fsr2h	equ	0xFDA
   910                           fsr2l	equ	0xFD9
   911                           status	equ	0xFD8
   912                           
   913 ;; *************** function _UART_Read *****************
   914 ;; Defined at:
   915 ;;		line 126 in file "main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      unsigned char 
   922 ;; Registers used:
   923 ;;		wreg, status,2
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   929 ;;      Params:         0       0       0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_ISR
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text8
   943  00024E                     __ptext8:
   944                           	opt stack 0
   945  00024E                     _UART_Read:
   946                           	opt stack 28
   947                           
   948                           ;main.c: 128: while(!RCIF);
   949                           
   950                           ;incstack = 0
   951  00024E  D000               	goto	i2l57
   952  000250                     i2l57:
   953  000250  AA9E               	btfss	3998,5,c	;volatile
   954  000252  D7FE               	goto	i2l57
   955                           
   956                           ;main.c: 129: return RCREG;
   957  000254  50AE               	movf	4014,w,c	;volatile
   958  000256  D000               	goto	i2l60
   959  000258                     i2l60:
   960  000258  0012               	return		;funcret
   961  00025A                     __end_of_UART_Read:
   962                           	opt stack 0
   963  0000                     pclatu	equ	0xFFB
   964                           pclath	equ	0xFFA
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           prodh	equ	0xFF4
   970                           prodl	equ	0xFF3
   971                           intcon	equ	0xFF2
   972                           postinc0	equ	0xFEE
   973                           fsr0h	equ	0xFEA
   974                           fsr0l	equ	0xFE9
   975                           wreg	equ	0xFE8
   976                           fsr1h	equ	0xFE2
   977                           fsr1l	equ	0xFE1
   978                           indf2	equ	0xFDF
   979                           fsr2h	equ	0xFDA
   980                           fsr2l	equ	0xFD9
   981                           status	equ	0xFD8
   982                           pclatu	equ	0xFFB
   983                           pclath	equ	0xFFA
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           fsr0h	equ	0xFEA
   993                           fsr0l	equ	0xFE9
   994                           wreg	equ	0xFE8
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           indf2	equ	0xFDF
   998                           fsr2h	equ	0xFDA
   999                           fsr2l	equ	0xFD9
  1000                           status	equ	0xFD8
  1001                           
  1002                           	psect	rparam
  1003  0000                     pclatu	equ	0xFFB
  1004                           pclath	equ	0xFFA
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           prodh	equ	0xFF4
  1010                           prodl	equ	0xFF3
  1011                           intcon	equ	0xFF2
  1012                           postinc0	equ	0xFEE
  1013                           fsr0h	equ	0xFEA
  1014                           fsr0l	equ	0xFE9
  1015                           wreg	equ	0xFE8
  1016                           fsr1h	equ	0xFE2
  1017                           fsr1l	equ	0xFE1
  1018                           indf2	equ	0xFDF
  1019                           fsr2h	equ	0xFDA
  1020                           fsr2l	equ	0xFD9
  1021                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         405
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     37      42
    BANK0           128      0       0
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_TLS0101

Critical Paths under _ISR in COMRAM

    _ISR->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     131
                                             32 COMRAM     5     0      5
                         _UART_Write
                      _delay_TLS0101
                         _init_IOPin
                         _init_USART
                     _read_id_module
 ---------------------------------------------------------------------------------
 (1) _read_id_module                                       4     2      2      27
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IOPin                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_TLS0101                                       12     8      4      89
                                             20 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 14    14      0     382
                                              6 COMRAM    14    14      0
                          _UART_Read
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write
   _delay_TLS0101
   _init_IOPin
   _init_USART
   _read_id_module

 _ISR (ROOT)
   _UART_Read
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     25      2A       1       33.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BA      15        0.0%
DATA                 0      0     1BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May  5 12:18:02 2015

                      _t 002A                       l45 01A0                       l46 0192  
                     l66 0244                       l76 017E              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l844 01DE  
                    l790 0166                      l782 014A                      l794 0174  
                    l786 0158             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _ISR 0008                      _iRx 0026             ___awmod@sign 0006  
                    wreg 000FE8         ??_read_id_module 0017             __CFG_LVP$OFF 000000  
                   ?_ISR 0001             __CFG_WDT$OFF 000000                     _RCIF 007CF5  
                   i2l60 0258                     i2l57 0250                     i2l86 007C  
                   _TRMT 007D61             __CFG_PWRT$ON 000000                     _main 01C8  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 0018            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010                    ??_ISR 0007  
                  ?_main 0021          __end_of___awmod 0138                    i2l295 0136  
                  i2l810 00DA                    i2l830 012C                    i2l822 0110  
                  i2l814 00E8                    i2l806 00CC                    i2l816 00F2  
                  i2l818 00FA                    i2l826 011C                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000              ?_UART_Write 0001  
     __size_of_UART_Read 000C            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000    __end_of_delay_TLS0101 01C8  
                  tablat 000FF5    delay_TLS0101@delayVal 0015                    status 000FD8  
        __initialization 0204             __end_of_main 0204                   ??_main 0026  
          __activetblptr 000000           __CFG_XINST$OFF 000000        __end_of_UART_Read 025A  
    __size_of_UART_Write 000E           __CFG_STVREN$ON 000000                ??___awmod 0005  
                 clear_0 020A                   clear_1 0216          ___awmod@divisor 0003  
        ___awmod@counter 0005                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 0226  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
             _iRxLecture 0028          __CFG_LPT1OSC$ON 000000               __pbssBANK1 0100  
             __pbssBANK2 0200       __CFG_CCP2MX$PORTBE 000000             ??_UART_Write 0015  
                __Hparam 0000                  __Lparam 0000               _init_IOPin 025A  
             _init_USART 022C                  ___awmod 00B6       __end_of_UART_Write 024E  
                __pcinit 0204                  __ramtop 0600                  __ptext0 01C8  
                __ptext1 0138                  __ptext2 022C                  __ptext3 025A  
                __ptext4 0180                  __ptext5 0240                  __ptext7 00B6  
                __ptext8 024E             __size_of_ISR 00AE         read_id_module@id 0017  
       ___awmod@dividend 0001           __pintcode_body 001C     end_of_initialization 0226  
                int_func 001C  __size_of_read_id_module 0048                _RCSTAbits 000FAB  
                postinc0 000FEE                _UART_Read 024E   __size_of_delay_TLS0101 0048  
              _PORTAbits 000F80           UART_Write@data 0015                _TRISAbits 000F92  
              _TRISCbits 000F94                _TXSTAbits 000FAC              ?_init_IOPin 0001  
            ?_init_USART 0001               ?_UART_Read 0001      start_initialization 0204  
            __end_of_ISR 00B6            _delay_TLS0101 0180              __pbssCOMRAM 0026  
    __size_of_init_IOPin 000A      __size_of_init_USART 0014           ?_delay_TLS0101 0015  
         _read_id_module 0138                __pintcode 0008                 ?___awmod 0001  
            ??_UART_Read 0001   __end_of_read_id_module 0180                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000          ??_delay_TLS0101 0019  
        ?_read_id_module 0015                 _RxBuffer 0100                 __Hrparam 0000  
           ??_init_IOPin 0015             ??_init_USART 0015                 _TxBuffer 0200  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awmod 0082  
     __end_of_init_IOPin 0264       __end_of_init_USART 0240            __size_of_main 003C  
         delay_TLS0101@i 001D                 main@argc 0021                 main@argv 0023  
            _OSCTUNEbits 000F9B               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3               _UART_Write 0240  
