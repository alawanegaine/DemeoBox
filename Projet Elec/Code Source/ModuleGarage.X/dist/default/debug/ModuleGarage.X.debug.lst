

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue May  5 14:52:47 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     _OSCTUNEbits	set	3995
    21  0000                     _PORTAbits	set	3968
    22  0000                     _TRISAbits	set	3986
    23  0000                     _TRISCbits	set	3988
    24  0000                     _ADCON1bits	set	4033
    25  0000                     _OSCCONbits	set	4051
    26  0000                     _PIE1bits	set	3997
    27  0000                     _PIR1bits	set	3998
    28  0000                     _RCREG	set	4014
    29  0000                     _RCSTAbits	set	4011
    30  0000                     _SPBRG	set	4015
    31  0000                     _TXREG	set	4013
    32  0000                     _TXSTAbits	set	4012
    33  0000                     _RCIF	set	31989
    34  0000                     _TRMT	set	32097
    35  0000                     _INTCONbits	set	4082
    36                           
    37                           ; 0 bytes @ 0x1F
    38 ;;
    39 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    40 ;;
    41 ;; *************** function _main *****************
    42 ;; Defined at:
    43 ;;		line 161 in file "main.c"
    44 ;; Parameters:    Size  Location     Type
    45 ;;  argc            2   26[COMRAM] int 
    46 ;;  argv            3   28[COMRAM] PTR PTR unsigned char 
    47 ;; Auto vars:     Size  Location     Type
    48 ;;		None
    49 ;; Return value:  Size  Location     Type
    50 ;;                  2   26[COMRAM] int 
    51 ;; Registers used:
    52 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    53 ;; Tracked objects:
    54 ;;		On entry : 0/0
    55 ;;		On exit  : 0/0
    56 ;;		Unchanged: 0/0
    57 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    58 ;;      Params:         5       0       0       0       0       0       0
    59 ;;      Locals:         0       0       0       0       0       0       0
    60 ;;      Temps:          0       0       0       0       0       0       0
    61 ;;      Totals:         5       0       0       0       0       0       0
    62 ;;Total ram usage:        5 bytes
    63 ;; Hardware stack levels required when called:    3
    64 ;; This function calls:
    65 ;;		_UART_Write
    66 ;;		___awmod
    67 ;;		_init_IOPin
    68 ;;		_init_USART
    69 ;; This function is called by:
    70 ;;		Startup code after reset
    71 ;; This function uses a non-reentrant model
    72 ;;
    73                           
    74                           	psect	text0
    75  0001BA                     __ptext0:
    76                           	opt stack 0
    77  0001BA                     _main:
    78                           	opt stack 28
    79                           
    80                           ;main.c: 163: OSCCONbits.IRCF = 0b111 ;
    81                           
    82                           ;incstack = 0
    83  0001BA  88D3               	bsf	4051,4,c	;volatile
    84  0001BC  8AD3               	bsf	4051,5,c	;volatile
    85  0001BE  8CD3               	bsf	4051,6,c	;volatile
    86                           
    87                           ;main.c: 164: OSCTUNEbits.PLLEN = 1 ;
    88  0001C0  8C9B               	bsf	3995,6,c	;volatile
    89                           
    90                           ;main.c: 165: init_USART();
    91  0001C2  EC18  F001         	call	_init_USART	;wreg free
    92                           
    93                           ;main.c: 166: init_IOPin();
    94  0001C6  EC22  F001         	call	_init_IOPin	;wreg free
    95                           
    96                           ;main.c: 168: INTCONbits.PEIE = 1 ;
    97  0001CA  8CF2               	bsf	intcon,6,c	;volatile
    98                           
    99                           ;main.c: 169: INTCONbits.GIE = 1 ;
   100  0001CC  8EF2               	bsf	intcon,7,c	;volatile
   101                           
   102                           ;main.c: 172: {
   103                           ;main.c: 173: while(iRxLecture != iRx){
   104                           
   105                           ;main.c: 171: while(1)
   106  0001CE  D016               	goto	l899
   107  0001D0                     l895:
   108                           
   109                           ;main.c: 174: UART_Write(RxBuffer[iRxLecture%50]);
   110  0001D0  C035  F04C         	movff	_iRxLecture,___awmod@dividend
   111  0001D4  C036  F04D         	movff	_iRxLecture+1,___awmod@dividend+1
   112  0001D8  0E00               	movlw	0
   113  0001DA  6E4F               	movwf	___awmod@divisor+1,c
   114  0001DC  0E32               	movlw	50
   115  0001DE  6E4E               	movwf	___awmod@divisor,c
   116  0001E0  EC5B  F000         	call	___awmod	;wreg free
   117  0001E4  0E01               	movlw	low _RxBuffer
   118  0001E6  244C               	addwf	?___awmod,w,c
   119  0001E8  6ED9               	movwf	fsr2l,c
   120  0001EA  0E00               	movlw	high _RxBuffer
   121  0001EC  204D               	addwfc	?___awmod+1,w,c
   122  0001EE  6EDA               	movwf	fsr2h,c
   123  0001F0  50DF               	movf	indf2,w,c
   124  0001F2  EC2B  F001         	call	_UART_Write
   125                           
   126                           ;main.c: 175: iRxLecture++ ;
   127  0001F6  4A35               	infsnz	_iRxLecture,f,c
   128  0001F8  2A36               	incf	_iRxLecture+1,f,c
   129  0001FA  D000               	goto	l899
   130  0001FC                     l899:
   131  0001FC  5033               	movf	_iRx,w,c
   132  0001FE  1835               	xorwf	_iRxLecture,w,c
   133  000200  E1E7               	bnz	l895
   134  000202  5034               	movf	_iRx+1,w,c
   135  000204  1836               	xorwf	_iRxLecture+1,w,c
   136  000206  B4D8               	btfsc	status,2,c
   137  000208  D7F9               	goto	l899
   138  00020A  D7E2               	goto	l895
   139  00020C  D7F7               	goto	l899
   140                           
   141                           ;main.c: 176: }
   142                           ;main.c: 177: }
   143                           ;main.c: 179: return 0;
   144                           ;	Return value of _main is never used
   145  00020E  EF0C  F000         	goto	start
   146  000212                     __end_of_main:
   147                           	opt stack 0
   148                           intcon	equ	0xFF2
   149                           indf2	equ	0xFDF
   150                           fsr2h	equ	0xFDA
   151                           fsr2l	equ	0xFD9
   152                           status	equ	0xFD8
   153                           
   154                           	psect	cinit
   155  000212                     __pcinit:
   156                           	opt stack 0
   157  000212                     start_initialization:
   158                           	opt stack 0
   159  000212                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to BANK0 (50 bytes)
   163  000212  EE00  F080         	lfsr	0,__pbssBANK0
   164  000216  0E32               	movlw	50
   165  000218                     clear_0:
   166  000218  6AEE               	clrf	postinc0,c
   167  00021A  06E8               	decf	wreg,f,c
   168  00021C  E1FD               	bnz	clear_0
   169                           
   170                           ; Clear objects allocated to COMRAM (55 bytes)
   171  00021E  EE00  F001         	lfsr	0,__pbssCOMRAM
   172  000222  0E37               	movlw	55
   173  000224                     clear_1:
   174  000224  6AEE               	clrf	postinc0,c
   175  000226  06E8               	decf	wreg,f,c
   176  000228  E1FD               	bnz	clear_1
   177  00022A                     end_of_initialization:
   178                           	opt stack 0
   179  00022A                     __end_of__initialization:
   180                           	opt stack 0
   181  00022A  0100               	movlb	0
   182  00022C  EFDD  F000         	goto	_main	;jump to C main() function
   183                           intcon	equ	0xFF2
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           indf2	equ	0xFDF
   187                           fsr2h	equ	0xFDA
   188                           fsr2l	equ	0xFD9
   189                           status	equ	0xFD8
   190                           
   191                           	psect	bssCOMRAM
   192  000001                     __pbssCOMRAM:
   193                           	opt stack 0
   194  000001                     _RxBuffer:
   195                           	opt stack 0
   196  000001                     	ds	50
   197  000033                     _iRx:
   198                           	opt stack 0
   199  000033                     	ds	2
   200  000035                     _iRxLecture:
   201                           	opt stack 0
   202  000035                     	ds	2
   203  000037                     _t:
   204                           	opt stack 0
   205  000037                     	ds	1
   206                           intcon	equ	0xFF2
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           indf2	equ	0xFDF
   210                           fsr2h	equ	0xFDA
   211                           fsr2l	equ	0xFD9
   212                           status	equ	0xFD8
   213                           
   214                           	psect	bssBANK0
   215  000080                     __pbssBANK0:
   216                           	opt stack 0
   217  000080                     _TxBuffer:
   218                           	opt stack 0
   219  000080                     	ds	50
   220                           intcon	equ	0xFF2
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           indf2	equ	0xFDF
   224                           fsr2h	equ	0xFDA
   225                           fsr2l	equ	0xFD9
   226                           status	equ	0xFD8
   227                           
   228                           	psect	cstackCOMRAM
   229  000038                     __pcstackCOMRAM:
   230                           	opt stack 0
   231  000038                     ?i2___awmod:
   232                           	opt stack 0
   233  000038                     i2___awmod@dividend:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x0
   237  000038                     	ds	2
   238  00003A                     i2___awmod@divisor:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x2
   242  00003A                     	ds	2
   243  00003C                     i2___awmod@counter:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x4
   247  00003C                     	ds	1
   248  00003D                     i2___awmod@sign:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x5
   252  00003D                     	ds	1
   253  00003E                     ??_ISR:
   254                           
   255                           ; 0 bytes @ 0x6
   256  00003E                     	ds	14
   257  00004C                     ?___awmod:
   258                           	opt stack 0
   259  00004C                     UART_Write@data:
   260                           	opt stack 0
   261  00004C                     ___awmod@dividend:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x14
   265  00004C                     	ds	2
   266  00004E                     ___awmod@divisor:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x16
   270  00004E                     	ds	2
   271  000050                     ___awmod@counter:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x18
   275  000050                     	ds	1
   276  000051                     ___awmod@sign:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x19
   280  000051                     	ds	1
   281  000052                     
   282                           ; 2 bytes @ 0x1A
   283  000052                     	ds	2
   284  000054                     
   285                           ; 3 bytes @ 0x1C
   286  000054                     	ds	3
   287  000057                     intcon	equ	0xFF2
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           indf2	equ	0xFDF
   291                           fsr2h	equ	0xFDA
   292                           fsr2l	equ	0xFD9
   293                           status	equ	0xFD8
   294                           
   295 ;; *************** function _init_USART *****************
   296 ;; Defined at:
   297 ;;		line 103 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;		None               void
   304 ;; Registers used:
   305 ;;		wreg, status,2
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text1
   326  000230                     __ptext1:
   327                           	opt stack 0
   328  000230                     _init_USART:
   329                           	opt stack 28
   330                           
   331                           ;main.c: 104: TXSTAbits.TXEN = 1 ;
   332                           
   333                           ;incstack = 0
   334  000230  8AAC               	bsf	4012,5,c	;volatile
   335                           
   336                           ;main.c: 105: TXSTAbits.BRGH = 1 ;
   337  000232  84AC               	bsf	4012,2,c	;volatile
   338                           
   339                           ;main.c: 106: RCSTAbits.CREN = 1 ;
   340  000234  88AB               	bsf	4011,4,c	;volatile
   341                           
   342                           ;main.c: 110: TRISCbits.RC7 = 1 ;
   343  000236  8E94               	bsf	3988,7,c	;volatile
   344                           
   345                           ;main.c: 111: TRISCbits.RC6 = 0 ;
   346  000238  9C94               	bcf	3988,6,c	;volatile
   347                           
   348                           ;main.c: 113: SPBRG = 51 ;
   349  00023A  0E33               	movlw	51
   350  00023C  6EAF               	movwf	4015,c	;volatile
   351                           
   352                           ;main.c: 115: PIE1bits.RCIE = 1 ;
   353  00023E  8A9D               	bsf	3997,5,c	;volatile
   354                           
   355                           ;main.c: 116: RCSTAbits.SPEN = 1 ;
   356  000240  8EAB               	bsf	4011,7,c	;volatile
   357  000242  0012               	return		;funcret
   358  000244                     __end_of_init_USART:
   359                           	opt stack 0
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           indf2	equ	0xFDF
   364                           fsr2h	equ	0xFDA
   365                           fsr2l	equ	0xFD9
   366                           status	equ	0xFD8
   367                           
   368 ;; *************** function _init_IOPin *****************
   369 ;; Defined at:
   370 ;;		line 119 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;		None               void
   377 ;; Registers used:
   378 ;;		None
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   384 ;;      Params:         0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    2
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text2
   399  000244                     __ptext2:
   400                           	opt stack 0
   401  000244                     _init_IOPin:
   402                           	opt stack 28
   403                           
   404                           ;main.c: 120: ADCON1bits.PCFG = 0b1111 ;
   405                           
   406                           ;incstack = 0
   407  000244  80C1               	bsf	4033,0,c	;volatile
   408  000246  82C1               	bsf	4033,1,c	;volatile
   409  000248  84C1               	bsf	4033,2,c	;volatile
   410  00024A  86C1               	bsf	4033,3,c	;volatile
   411                           
   412                           ;main.c: 121: TRISAbits.TRISA0 = 1 ;
   413  00024C  8092               	bsf	3986,0,c	;volatile
   414                           
   415                           ;main.c: 122: TRISAbits.TRISA1 = 1 ;
   416  00024E  8292               	bsf	3986,1,c	;volatile
   417                           
   418                           ;main.c: 123: TRISAbits.TRISA2 = 1 ;
   419  000250  8492               	bsf	3986,2,c	;volatile
   420                           
   421                           ;main.c: 124: TRISAbits.TRISA3 = 1 ;
   422  000252  8692               	bsf	3986,3,c	;volatile
   423  000254  0012               	return		;funcret
   424  000256                     __end_of_init_IOPin:
   425                           	opt stack 0
   426                           intcon	equ	0xFF2
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           indf2	equ	0xFDF
   430                           fsr2h	equ	0xFDA
   431                           fsr2l	equ	0xFD9
   432                           status	equ	0xFD8
   433                           
   434 ;; *************** function ___awmod *****************
   435 ;; Defined at:
   436 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/awmod.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  dividend        2   20[COMRAM] int 
   439 ;;  divisor         2   22[COMRAM] int 
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  sign            1   25[COMRAM] unsigned char 
   442 ;;  counter         1   24[COMRAM] unsigned char 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  2   20[COMRAM] int 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   452 ;;      Params:         4       0       0       0       0       0       0
   453 ;;      Locals:         2       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0
   455 ;;      Totals:         6       0       0       0       0       0       0
   456 ;;Total ram usage:        6 bytes
   457 ;; Hardware stack levels used:    1
   458 ;; Hardware stack levels required when called:    2
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text3
   467  0000B6                     __ptext3:
   468                           	opt stack 0
   469  0000B6                     ___awmod:
   470                           	opt stack 28
   471                           
   472                           ;incstack = 0
   473  0000B6  0E00               	movlw	0
   474  0000B8  6E51               	movwf	___awmod@sign,c
   475  0000BA  AE4D               	btfss	___awmod@dividend+1,7,c
   476  0000BC  D007               	goto	l821
   477  0000BE  6C4C               	negf	___awmod@dividend,c
   478  0000C0  1E4D               	comf	___awmod@dividend+1,f,c
   479  0000C2  B0D8               	btfsc	status,0,c
   480  0000C4  2A4D               	incf	___awmod@dividend+1,f,c
   481  0000C6  0E01               	movlw	1
   482  0000C8  6E51               	movwf	___awmod@sign,c
   483  0000CA  D000               	goto	l821
   484  0000CC                     l821:
   485  0000CC  AE4F               	btfss	___awmod@divisor+1,7,c
   486  0000CE  D005               	goto	l825
   487  0000D0  6C4E               	negf	___awmod@divisor,c
   488  0000D2  1E4F               	comf	___awmod@divisor+1,f,c
   489  0000D4  B0D8               	btfsc	status,0,c
   490  0000D6  2A4F               	incf	___awmod@divisor+1,f,c
   491  0000D8  D000               	goto	l825
   492  0000DA                     l825:
   493  0000DA  504E               	movf	___awmod@divisor,w,c
   494  0000DC  104F               	iorwf	___awmod@divisor+1,w,c
   495  0000DE  B4D8               	btfsc	status,2,c
   496  0000E0  D01D               	goto	l841
   497  0000E2  0E01               	movlw	1
   498  0000E4  6E50               	movwf	___awmod@counter,c
   499  0000E6  D005               	goto	l831
   500  0000E8                     l829:
   501  0000E8  90D8               	bcf	status,0,c
   502  0000EA  364E               	rlcf	___awmod@divisor,f,c
   503  0000EC  364F               	rlcf	___awmod@divisor+1,f,c
   504  0000EE  2A50               	incf	___awmod@counter,f,c
   505  0000F0  D000               	goto	l831
   506  0000F2                     l831:
   507  0000F2  BE4F               	btfsc	___awmod@divisor+1,7,c
   508  0000F4  D002               	goto	l833
   509  0000F6  D7F8               	goto	l829
   510  0000F8  D000               	goto	l833
   511  0000FA                     l833:
   512  0000FA  504E               	movf	___awmod@divisor,w,c
   513  0000FC  5C4C               	subwf	___awmod@dividend,w,c
   514  0000FE  504F               	movf	___awmod@divisor+1,w,c
   515  000100  584D               	subwfb	___awmod@dividend+1,w,c
   516  000102  A0D8               	btfss	status,0,c
   517  000104  D005               	goto	l837
   518  000106  504E               	movf	___awmod@divisor,w,c
   519  000108  5E4C               	subwf	___awmod@dividend,f,c
   520  00010A  504F               	movf	___awmod@divisor+1,w,c
   521  00010C  5A4D               	subwfb	___awmod@dividend+1,f,c
   522  00010E  D000               	goto	l837
   523  000110                     l837:
   524  000110  90D8               	bcf	status,0,c
   525  000112  324F               	rrcf	___awmod@divisor+1,f,c
   526  000114  324E               	rrcf	___awmod@divisor,f,c
   527  000116  2E50               	decfsz	___awmod@counter,f,c
   528  000118  D7F0               	goto	l833
   529  00011A  D000               	goto	l841
   530  00011C                     l841:
   531  00011C  5051               	movf	___awmod@sign,w,c
   532  00011E  B4D8               	btfsc	status,2,c
   533  000120  D005               	goto	l845
   534  000122  6C4C               	negf	___awmod@dividend,c
   535  000124  1E4D               	comf	___awmod@dividend+1,f,c
   536  000126  B0D8               	btfsc	status,0,c
   537  000128  2A4D               	incf	___awmod@dividend+1,f,c
   538  00012A  D000               	goto	l845
   539  00012C                     l845:
   540  00012C  C04C  F04C         	movff	___awmod@dividend,?___awmod
   541  000130  C04D  F04D         	movff	___awmod@dividend+1,?___awmod+1
   542  000134  D000               	goto	l300
   543  000136                     l300:
   544  000136  0012               	return		;funcret
   545  000138                     __end_of___awmod:
   546                           	opt stack 0
   547                           intcon	equ	0xFF2
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           indf2	equ	0xFDF
   551                           fsr2h	equ	0xFDA
   552                           fsr2l	equ	0xFD9
   553                           status	equ	0xFD8
   554                           
   555 ;; *************** function _UART_Write *****************
   556 ;; Defined at:
   557 ;;		line 138 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  data            1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  data            1   20[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   571 ;;      Params:         0       0       0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0       0       0
   574 ;;      Totals:         1       0       0       0       0       0       0
   575 ;;Total ram usage:        1 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; Hardware stack levels required when called:    2
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text4
   586  000256                     __ptext4:
   587                           	opt stack 0
   588  000256                     _UART_Write:
   589                           	opt stack 28
   590                           
   591                           ;incstack = 0
   592                           ;UART_Write@data stored from wreg
   593  000256  6E4C               	movwf	UART_Write@data,c
   594                           
   595                           ;main.c: 140: while(!TRMT);
   596  000258  D000               	goto	l68
   597  00025A                     l68:
   598  00025A  A2AC               	btfss	4012,1,c	;volatile
   599  00025C  D7FE               	goto	l68
   600                           
   601                           ;main.c: 141: TXREG = data;
   602  00025E  C04C  FFAD         	movff	UART_Write@data,4013	;volatile
   603  000262  0012               	return		;funcret
   604  000264                     __end_of_UART_Write:
   605                           	opt stack 0
   606                           intcon	equ	0xFF2
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           indf2	equ	0xFDF
   610                           fsr2h	equ	0xFDA
   611                           fsr2l	equ	0xFD9
   612                           status	equ	0xFD8
   613                           
   614 ;; *************** function _ISR *****************
   615 ;; Defined at:
   616 ;;		line 182 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;		None               void
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   630 ;;      Params:         0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0
   632 ;;      Temps:         14       0       0       0       0       0       0
   633 ;;      Totals:        14       0       0       0       0       0       0
   634 ;;Total ram usage:       14 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    1
   637 ;; This function calls:
   638 ;;		_UART_Read
   639 ;;		i2___awmod
   640 ;; This function is called by:
   641 ;;		Interrupt level 2
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	intcode
   646  000008                     __pintcode:
   647                           	opt stack 0
   648  000008                     _ISR:
   649                           	opt stack 28
   650                           
   651                           ;incstack = 0
   652  000008  CFFA F03E          	movff	pclath,??_ISR
   653  00000C  CFFB F03F          	movff	pclatu,??_ISR+1
   654  000010  CFE9 F040          	movff	fsr0l,??_ISR+2
   655  000014  ED0E  F000         	call	int_func,f	;refresh shadow registers
   656                           pclatu	equ	0xFFB
   657                           pclath	equ	0xFFA
   658                           intcon	equ	0xFF2
   659                           postinc0	equ	0xFEE
   660                           fsr0l	equ	0xFE9
   661                           wreg	equ	0xFE8
   662                           indf2	equ	0xFDF
   663                           fsr2h	equ	0xFDA
   664                           fsr2l	equ	0xFD9
   665                           status	equ	0xFD8
   666                           
   667                           	psect	intcode_body
   668  00001C                     __pintcode_body:
   669                           	opt stack 28
   670  00001C                     int_func:
   671                           	opt stack 28
   672  00001C  0006               	pop		; remove dummy address from shadow register refresh
   673  00001E  CFEA F041          	movff	fsr0h,??_ISR+3
   674  000022  CFE1 F042          	movff	fsr1l,??_ISR+4
   675  000026  CFE2 F043          	movff	fsr1h,??_ISR+5
   676  00002A  CFD9 F044          	movff	fsr2l,??_ISR+6
   677  00002E  CFDA F045          	movff	fsr2h,??_ISR+7
   678  000032  CFF3 F046          	movff	prodl,??_ISR+8
   679  000036  CFF4 F047          	movff	prodh,??_ISR+9
   680  00003A  CFF6 F048          	movff	tblptrl,??_ISR+10
   681  00003E  CFF7 F049          	movff	tblptrh,??_ISR+11
   682  000042  CFF8 F04A          	movff	tblptru,??_ISR+12
   683  000046  CFF5 F04B          	movff	tablat,??_ISR+13
   684                           
   685                           ;main.c: 184: if(PIR1bits.RCIF)
   686  00004A  AA9E               	btfss	3998,5,c	;volatile
   687  00004C  D017               	goto	i2l91
   688                           
   689                           ;main.c: 185: {
   690                           ;main.c: 186: RxBuffer[iRx%50] = UART_Read() ;
   691  00004E  C033  F038         	movff	_iRx,i2___awmod@dividend
   692  000052  C034  F039         	movff	_iRx+1,i2___awmod@dividend+1
   693  000056  0E00               	movlw	0
   694  000058  6E3B               	movwf	i2___awmod@divisor+1,c
   695  00005A  0E32               	movlw	50
   696  00005C  6E3A               	movwf	i2___awmod@divisor,c
   697  00005E  EC9C  F000         	call	i2___awmod	;wreg free
   698  000062  0E01               	movlw	low _RxBuffer
   699  000064  2438               	addwf	?i2___awmod,w,c
   700  000066  6ED9               	movwf	fsr2l,c
   701  000068  0E00               	movlw	high _RxBuffer
   702  00006A  2039               	addwfc	?i2___awmod+1,w,c
   703  00006C  6EDA               	movwf	fsr2h,c
   704  00006E  EC32  F001         	call	_UART_Read	;wreg free
   705  000072  6EDF               	movwf	indf2,c
   706                           
   707                           ;main.c: 187: iRx++ ;
   708  000074  4A33               	infsnz	_iRx,f,c
   709  000076  2A34               	incf	_iRx+1,f,c
   710                           
   711                           ;main.c: 188: PIR1bits.RCIF = 0;
   712  000078  9A9E               	bcf	3998,5,c	;volatile
   713  00007A  D000               	goto	i2l91
   714  00007C                     i2l91:
   715  00007C  C04B  FFF5         	movff	??_ISR+13,tablat
   716  000080  C04A  FFF8         	movff	??_ISR+12,tblptru
   717  000084  C049  FFF7         	movff	??_ISR+11,tblptrh
   718  000088  C048  FFF6         	movff	??_ISR+10,tblptrl
   719  00008C  C047  FFF4         	movff	??_ISR+9,prodh
   720  000090  C046  FFF3         	movff	??_ISR+8,prodl
   721  000094  C045  FFDA         	movff	??_ISR+7,fsr2h
   722  000098  C044  FFD9         	movff	??_ISR+6,fsr2l
   723  00009C  C043  FFE2         	movff	??_ISR+5,fsr1h
   724  0000A0  C042  FFE1         	movff	??_ISR+4,fsr1l
   725  0000A4  C041  FFEA         	movff	??_ISR+3,fsr0h
   726  0000A8  C040  FFE9         	movff	??_ISR+2,fsr0l
   727  0000AC  C03F  FFFB         	movff	??_ISR+1,pclatu
   728  0000B0  C03E  FFFA         	movff	??_ISR,pclath
   729  0000B4  0011               	retfie		f
   730  0000B6                     __end_of_ISR:
   731                           	opt stack 0
   732                           pclatu	equ	0xFFB
   733                           pclath	equ	0xFFA
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           prodh	equ	0xFF4
   739                           prodl	equ	0xFF3
   740                           intcon	equ	0xFF2
   741                           postinc0	equ	0xFEE
   742                           fsr0h	equ	0xFEA
   743                           fsr0l	equ	0xFE9
   744                           wreg	equ	0xFE8
   745                           fsr1h	equ	0xFE2
   746                           fsr1l	equ	0xFE1
   747                           indf2	equ	0xFDF
   748                           fsr2h	equ	0xFDA
   749                           fsr2l	equ	0xFD9
   750                           status	equ	0xFD8
   751                           
   752 ;; *************** function i2___awmod *****************
   753 ;; Defined at:
   754 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/awmod.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  dividend        2    0[COMRAM] int 
   757 ;;  divisor         2    2[COMRAM] int 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  __awmod         1    5[COMRAM] unsigned char 
   760 ;;  __awmod         1    4[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2    0[COMRAM] int 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   770 ;;      Params:         4       0       0       0       0       0       0
   771 ;;      Locals:         2       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0
   773 ;;      Totals:         6       0       0       0       0       0       0
   774 ;;Total ram usage:        6 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_ISR
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text6
   784  000138                     __ptext6:
   785                           	opt stack 0
   786  000138                     i2___awmod:
   787                           	opt stack 28
   788                           
   789                           ;incstack = 0
   790  000138  0E00               	movlw	0
   791  00013A  6E3D               	movwf	i2___awmod@sign,c
   792  00013C  AE39               	btfss	i2___awmod@dividend+1,7,c
   793  00013E  D007               	goto	i2l857
   794  000140  6C38               	negf	i2___awmod@dividend,c
   795  000142  1E39               	comf	i2___awmod@dividend+1,f,c
   796  000144  B0D8               	btfsc	status,0,c
   797  000146  2A39               	incf	i2___awmod@dividend+1,f,c
   798  000148  0E01               	movlw	1
   799  00014A  6E3D               	movwf	i2___awmod@sign,c
   800  00014C  D000               	goto	i2l857
   801  00014E                     i2l857:
   802  00014E  AE3B               	btfss	i2___awmod@divisor+1,7,c
   803  000150  D005               	goto	i2l861
   804  000152  6C3A               	negf	i2___awmod@divisor,c
   805  000154  1E3B               	comf	i2___awmod@divisor+1,f,c
   806  000156  B0D8               	btfsc	status,0,c
   807  000158  2A3B               	incf	i2___awmod@divisor+1,f,c
   808  00015A  D000               	goto	i2l861
   809  00015C                     i2l861:
   810  00015C  503A               	movf	i2___awmod@divisor,w,c
   811  00015E  103B               	iorwf	i2___awmod@divisor+1,w,c
   812  000160  B4D8               	btfsc	status,2,c
   813  000162  D01D               	goto	i2l877
   814  000164  0E01               	movlw	1
   815  000166  6E3C               	movwf	i2___awmod@counter,c
   816  000168  D005               	goto	i2l867
   817  00016A                     i2l865:
   818  00016A  90D8               	bcf	status,0,c
   819  00016C  363A               	rlcf	i2___awmod@divisor,f,c
   820  00016E  363B               	rlcf	i2___awmod@divisor+1,f,c
   821  000170  2A3C               	incf	i2___awmod@counter,f,c
   822  000172  D000               	goto	i2l867
   823  000174                     i2l867:
   824  000174  BE3B               	btfsc	i2___awmod@divisor+1,7,c
   825  000176  D002               	goto	i2l869
   826  000178  D7F8               	goto	i2l865
   827  00017A  D000               	goto	i2l869
   828  00017C                     i2l869:
   829  00017C  503A               	movf	i2___awmod@divisor,w,c
   830  00017E  5C38               	subwf	i2___awmod@dividend,w,c
   831  000180  503B               	movf	i2___awmod@divisor+1,w,c
   832  000182  5839               	subwfb	i2___awmod@dividend+1,w,c
   833  000184  A0D8               	btfss	status,0,c
   834  000186  D005               	goto	i2l873
   835  000188  503A               	movf	i2___awmod@divisor,w,c
   836  00018A  5E38               	subwf	i2___awmod@dividend,f,c
   837  00018C  503B               	movf	i2___awmod@divisor+1,w,c
   838  00018E  5A39               	subwfb	i2___awmod@dividend+1,f,c
   839  000190  D000               	goto	i2l873
   840  000192                     i2l873:
   841  000192  90D8               	bcf	status,0,c
   842  000194  323B               	rrcf	i2___awmod@divisor+1,f,c
   843  000196  323A               	rrcf	i2___awmod@divisor,f,c
   844  000198  2E3C               	decfsz	i2___awmod@counter,f,c
   845  00019A  D7F0               	goto	i2l869
   846  00019C  D000               	goto	i2l877
   847  00019E                     i2l877:
   848  00019E  503D               	movf	i2___awmod@sign,w,c
   849  0001A0  B4D8               	btfsc	status,2,c
   850  0001A2  D005               	goto	i2l881
   851  0001A4  6C38               	negf	i2___awmod@dividend,c
   852  0001A6  1E39               	comf	i2___awmod@dividend+1,f,c
   853  0001A8  B0D8               	btfsc	status,0,c
   854  0001AA  2A39               	incf	i2___awmod@dividend+1,f,c
   855  0001AC  D000               	goto	i2l881
   856  0001AE                     i2l881:
   857  0001AE  C038  F038         	movff	i2___awmod@dividend,?i2___awmod
   858  0001B2  C039  F039         	movff	i2___awmod@dividend+1,?i2___awmod+1
   859  0001B6  D000               	goto	i2l300
   860  0001B8                     i2l300:
   861  0001B8  0012               	return		;funcret
   862  0001BA                     __end_ofi2___awmod:
   863                           	opt stack 0
   864                           pclatu	equ	0xFFB
   865                           pclath	equ	0xFFA
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           prodh	equ	0xFF4
   871                           prodl	equ	0xFF3
   872                           intcon	equ	0xFF2
   873                           postinc0	equ	0xFEE
   874                           fsr0h	equ	0xFEA
   875                           fsr0l	equ	0xFE9
   876                           wreg	equ	0xFE8
   877                           fsr1h	equ	0xFE2
   878                           fsr1l	equ	0xFE1
   879                           indf2	equ	0xFDF
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _UART_Read *****************
   885 ;; Defined at:
   886 ;;		line 127 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      unsigned char 
   893 ;; Registers used:
   894 ;;		wreg, status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         0       0       0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_ISR
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text7
   914  000264                     __ptext7:
   915                           	opt stack 0
   916  000264                     _UART_Read:
   917                           	opt stack 28
   918                           
   919                           ;main.c: 129: while(!RCIF);
   920                           
   921                           ;incstack = 0
   922  000264  D000               	goto	i2l59
   923  000266                     i2l59:
   924  000266  AA9E               	btfss	3998,5,c	;volatile
   925  000268  D7FE               	goto	i2l59
   926                           
   927                           ;main.c: 130: return RCREG;
   928  00026A  50AE               	movf	4014,w,c	;volatile
   929  00026C  D000               	goto	i2l62
   930  00026E                     i2l62:
   931  00026E  0012               	return		;funcret
   932  000270                     __end_of_UART_Read:
   933                           	opt stack 0
   934  0000                     pclatu	equ	0xFFB
   935                           pclath	equ	0xFFA
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           prodh	equ	0xFF4
   941                           prodl	equ	0xFF3
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           fsr0h	equ	0xFEA
   945                           fsr0l	equ	0xFE9
   946                           wreg	equ	0xFE8
   947                           fsr1h	equ	0xFE2
   948                           fsr1l	equ	0xFE1
   949                           indf2	equ	0xFDF
   950                           fsr2h	equ	0xFDA
   951                           fsr2l	equ	0xFD9
   952                           status	equ	0xFD8
   953                           pclatu	equ	0xFFB
   954                           pclath	equ	0xFFA
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           prodh	equ	0xFF4
   960                           prodl	equ	0xFF3
   961                           intcon	equ	0xFF2
   962                           postinc0	equ	0xFEE
   963                           fsr0h	equ	0xFEA
   964                           fsr0l	equ	0xFE9
   965                           wreg	equ	0xFE8
   966                           fsr1h	equ	0xFE2
   967                           fsr1l	equ	0xFE1
   968                           indf2	equ	0xFDF
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8
   972                           
   973                           	psect	rparam
   974  0000                     pclatu	equ	0xFFB
   975                           pclath	equ	0xFFA
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           prodh	equ	0xFF4
   981                           prodl	equ	0xFF3
   982                           intcon	equ	0xFF2
   983                           postinc0	equ	0xFEE
   984                           fsr0h	equ	0xFEA
   985                           fsr0l	equ	0xFE9
   986                           wreg	equ	0xFE8
   987                           fsr1h	equ	0xFE2
   988                           fsr1l	equ	0xFE1
   989                           indf2	equ	0xFDF
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     31      86
    BANK0           128      0      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod

Critical Paths under _ISR in COMRAM

    _ISR->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     431
                                             26 COMRAM     5     0      5
                         _UART_Write
                            ___awmod
                         _init_IOPin
                         _init_USART
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_IOPin                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     416
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 14    14      0     348
                                              6 COMRAM    14    14      0
                          _UART_Read
                          i2___awmod
 ---------------------------------------------------------------------------------
 (3) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write
   ___awmod
   _init_IOPin
   _init_USART

 _ISR (ROOT)
   _UART_Read
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      32       4       39.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1F      56       1       67.7%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      14        0.0%
DATA                 0      0      88      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue May  5 14:52:47 2015

                      _t 0037                       l68 025A              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l300 0136  
                    l821 00CC                      l831 00F2                      l833 00FA  
                    l841 011C                      l825 00DA                      l845 012C  
                    l837 0110                      l829 00E8                      l895 01D0  
                    l899 01FC             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _ISR 0008                      _iRx 0033             ___awmod@sign 0051  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     ?_ISR 0038  
           __CFG_WDT$OFF 000000                     _RCIF 007CF5                     i2l62 026E  
                   i2l59 0266                     i2l91 007C                     _TRMT 007D61  
           __CFG_PWRT$ON 000000                     _main 01BA                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0018            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010                    ??_ISR 003E                    ?_main 0052  
        __end_of___awmod 0138                    i2l300 01B8                    i2l861 015C  
                  i2l881 01AE                    i2l873 0192                    i2l865 016A  
                  i2l857 014E                    i2l867 0174                    i2l869 017C  
                  i2l877 019E                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000              ?_UART_Write 0038       __size_of_UART_Read 000C  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    status 000FD8  
     __size_ofi2___awmod 0082          __initialization 0212             __end_of_main 0212  
                 ??_main 0057            __activetblptr 000000           __CFG_XINST$OFF 000000  
      __end_of_UART_Read 0270      __size_of_UART_Write 000E           __CFG_STVREN$ON 000000  
              ??___awmod 0050                   clear_0 0218                   clear_1 0224  
        ___awmod@divisor 004E          ___awmod@counter 0050        __end_ofi2___awmod 01BA  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         i2___awmod@sign 003D               __accesstop 0080  __end_of__initialization 022A  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0038  
             _iRxLecture 0035          __CFG_LPT1OSC$ON 000000               __pbssBANK0 0080  
     __CFG_CCP2MX$PORTBE 000000             ??_UART_Write 004C                  __Hparam 0000  
                __Lparam 0000               _init_IOPin 0244               _init_USART 0230  
                ___awmod 00B6       __end_of_UART_Write 0264                  __pcinit 0212  
                __ramtop 0600                  __ptext0 01BA                  __ptext1 0230  
                __ptext2 0244                  __ptext3 00B6                  __ptext4 0256  
                __ptext6 0138                  __ptext7 0264             __size_of_ISR 00AE  
       ___awmod@dividend 004C           __pintcode_body 001C     end_of_initialization 022A  
                int_func 001C                _RCSTAbits 000FAB                  postinc0 000FEE  
              _UART_Read 0264                _PORTAbits 000F80           UART_Write@data 004C  
              _TRISAbits 000F92                _TRISCbits 000F94                i2___awmod 0138  
              _TXSTAbits 000FAC              ?_init_IOPin 0038              ?_init_USART 0038  
             ?_UART_Read 0038      start_initialization 0212              __end_of_ISR 00B6  
             ?i2___awmod 0038              __pbssCOMRAM 0001      __size_of_init_IOPin 0012  
    __size_of_init_USART 0014                __pintcode 0008                 ?___awmod 004C  
            ??_UART_Read 0038              ??i2___awmod 003C                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1  
     i2___awmod@dividend 0038                 _RxBuffer 0001                 __Hrparam 0000  
           ??_init_IOPin 004C             ??_init_USART 004C                 _TxBuffer 0080  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awmod 0082  
     __end_of_init_IOPin 0256       __end_of_init_USART 0244            __size_of_main 0058  
               main@argc 0052                 main@argv 0054        i2___awmod@divisor 003A  
      i2___awmod@counter 003C              _OSCTUNEbits 000F9B               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3               _UART_Write 0256  
